{"ast":null,"code":"var _jsxFileName = \"/home/queue/Code/Side/liftquest/fe/src/components/startmenu/index.js\";\nimport React from 'react';\nimport { Route as R } from 'react-router-dom';\nimport Wrapper from './style'; //components\n\nimport Menu from './menu'; //items\n\nimport Logo from '../../design/icons/liftquest';\n\nclass StartMenu extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      active: 'press enter button',\n      options: ['press enter button']\n    };\n\n    this.componentDidMount = () => {\n      window.addEventListener('keyup', this.check_key);\n    };\n\n    this.componentWillUnmount = () => {\n      window.removeEventListener('keyup', this.check_key);\n    };\n\n    this.start = () => {\n      switch (this.state.active) {\n        case 'press enter button':\n          {\n            this.setState({\n              active: 'continue',\n              options: ['continue', 'new game', 'about']\n            });\n            break;\n          }\n\n        case 'continue':\n          {\n            history.pushState('/login');\n            break;\n          }\n\n        default:\n          console.log('default');\n      } // if(this.state.active === 'press enter button') {\n      //   this.setState({\n      //     active: 'continue',\n      //     options: ['continue', 'new game', 'about'],\n      //   })\n      // } else if(this.state.active === 'continue') {\n      //   console.log(this.state.active)\n      // }\n\n    };\n\n    this.change_option = e => {\n      this.setState({\n        active: e.currentTarget.innerText\n      });\n    };\n\n    this.update_active = inc => {\n      let idx = this.state.options.indexOf(this.state.active);\n      const max = this.state.options.length;\n\n      if (inc) {\n        idx += inc;\n        if (idx > max - 1) idx = 0;\n        if (idx < 0) idx = max - 1;\n        this.setState({\n          active: this.state.options[idx]\n        });\n      }\n    };\n\n    this.check_key = e => {\n      switch (e.key) {\n        case 'Enter':\n          this.start();\n          break;\n\n        case 'ArrowDown':\n          this.update_active(1);\n          break;\n\n        case 'ArrowUp':\n          this.update_active(-1);\n          break;\n\n        default:\n          console.log('nope');\n      }\n    };\n\n    this.render = () => React.createElement(Wrapper, {\n      className: \"start-menu\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Logo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"LIFT QUEST\")), React.createElement(Menu, {\n      data: this.state,\n      click: this.check_for_enter,\n      change: this.change_option,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default StartMenu;","map":{"version":3,"sources":["/home/queue/Code/Side/liftquest/fe/src/components/startmenu/index.js"],"names":["React","Route","R","Wrapper","Menu","Logo","StartMenu","Component","state","active","options","componentDidMount","window","addEventListener","check_key","componentWillUnmount","removeEventListener","start","setState","history","pushState","console","log","change_option","e","currentTarget","innerText","update_active","inc","idx","indexOf","max","length","key","render","check_for_enter"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {Route as R} from 'react-router-dom'\nimport Wrapper from './style'\n\n//components\nimport Menu from './menu'\n//items\nimport Logo from '../../design/icons/liftquest'\n\nclass StartMenu extends React.Component {\n  state = {\n    active: 'press enter button',\n    options: ['press enter button']\n  }\n  componentDidMount = () => {\n    window.addEventListener('keyup', this.check_key)\n  }\n  componentWillUnmount = () => {\n    window.removeEventListener('keyup', this.check_key)\n  }\n  start = () => {\n    switch(this.state.active) {\n      case 'press enter button': {\n        this.setState({\n          active: 'continue',\n          options: ['continue', 'new game', 'about'],\n        })\n        break\n      }\n      case 'continue': {\n        history.pushState('/login')\n        break\n      }\n      default: console.log('default')\n    }\n    // if(this.state.active === 'press enter button') {\n    //   this.setState({\n    //     active: 'continue',\n    //     options: ['continue', 'new game', 'about'],\n    //   })\n    // } else if(this.state.active === 'continue') {\n    //   console.log(this.state.active)\n    // }\n  }\n  change_option = e => {\n    this.setState({\n      active: e.currentTarget.innerText\n    })\n  }\n  update_active = inc => {\n    let idx = this.state.options.indexOf(this.state.active)\n    const max = this.state.options.length\n    if(inc) {\n      idx += inc\n      if(idx > max - 1) idx = 0\n      if(idx < 0) idx = max -1\n      this.setState({\n        active: this.state.options[idx]\n      })\n    }\n  }\n  check_key = e => {\n    switch(e.key) {\n      case 'Enter': this.start(); break;\n      case 'ArrowDown': this.update_active(1); break;\n      case 'ArrowUp': this.update_active(-1); break;\n      default: console.log('nope')\n    }\n  }\n  render = () =>\n    <Wrapper className='start-menu'>\n      <div className='logo'>\n        <Logo />\n        <h1>LIFT QUEST</h1>\n      </div>\n      <Menu data={this.state} click={this.check_for_enter} change={this.change_option}/>\n    </Wrapper>\n}\n\nexport default StartMenu"]},"metadata":{},"sourceType":"module"}